<?xml version='1.0' encoding='UTF-8'?>
<article article_id="887" title="MessagePad" authors="2" lines="53">
  <entry author_id="42424" end="12" start="0">The Newton was one of the world's first personal digital assistants (PDA).
Developed by Apple Computer and sold from 1993 to 1998, it was based on the ARM processor, and featured handwriting recognition.
Apple's official name for the device was MessagePad; the term Newton was Apple's name for the operating system it used.
The Newton was unsuccessful in the marketplace for two primary reasons: its high price (which went up to $1000 when models 2000 and 2100 were introduced), and its large size (it failed the "pocket test" by not fitting in an average coat, shirt, or pants pocket).
Critics also panned its often-innacurate handwriting recognition.
These problems would largely be solved by another company with the Palm Pilot, released after the Newton was discontinued.

Many prototypes of additional Newton models were spotted.
Most notable was a Newton tablet or "slate," a large, flat screen which could be written on.
Others included a "Kids Newton" with side handgrips and buttons, "VideoPads" which would have incorporated a video camera and screen on their flip-top covers for two-way communications, the "Mini 2000" which would have been very similar to Palm Pilot, and the "NewtonPhone" (developed by Siemens AG) which incorporated a handset and a keyboard.

Before the Newton project was cancelled, it was "spun off" into its own company, Newton Inc; but this reabsorbed several months later when Steve Jobs ousted Apple CEO Gil Amelio and re-took control of Apple.
There has since been continual speculation of when Apple would release a new PDA with some Newton technology (or possibly a combination of technology from Newton and Palm).
Apple continues to deny that such a project will ever happen.</entry>
  <entry author_id="3356178" end="32" start="12">The Newton was pre-loaded with a variety of software to aid in personal data organization and management.
This included such applications as Notes, Names, and Dates, as well as a variety of productivity tools such as a calculator, conversion calculators (metric conversions, currency conversions, etc), time-zone maps, etc.
In later versions of the Newton OS these applications were refined, and new ones were added, such as the Works word processor and the Newton Internet Enabler, as well as the inclusion of bundled 3rd party applications, such as the QuickFigure Works spreadsheet (a "lite" version of Pelicanware's QuickFigure Pro), Pocket Quicken, the NetHopper web browser, and the EnRoute email client.
Various Newton applications had full import/export capabilities with popular desktop office suite and PIM application file formats.
The Notes application allowed you to create small documents that could contain text that had been typed, or that had been recognized from handwriting, as well as "ink text", free-hand sketches, and "Shapes".

One of the unique new types of Notes stationery built into OS 2.0 was a hierarchical, bullet-ed, collapsible, multi-line "Checklist".
This could be used for organizing thoughts, priorities, "to do" lists, planning steps and sub-tasks, etc. Each bullet point could contain as many lines of text as desired.
A bullet point could be dragged and placed underneath another bullet point, thus forming a hierarchical outline/tree.
When a bullet point was dragged, the entire sub-tree of child bullet points underneath it (if any) would be dragged along as well.
If a bullet point had child bullet points, tapping the hollow parent bullet point once would "roll up" or collapse all the children.
The parent bullet point would become a solid black circle and all the children would disappear.
Tapping the parent bullet point again would make the children re-appear.
The Names application was used for storing contacts.
There was no pre-defined limit for how many addresses, phone numbers, or email addresses a contact could have.
Entering a date in Names for fields such as birthday or anniversary automatically created corresponding repeating events in the Dates application.
Each contact had an attached free-form notes field available to it, that could contain any mix of interleaved text, ink text, Shapes, or Sketches.
Like Notes, Names could be extended by developers, to create special new categories of contacts with specialized pre-defined fields.
Names shipped with 3 types of contacts, people, companies, and groups, but a developer could define new types, for instance "client", "patient", etc.
Dates supplied calendar, events, meeting, and alarms functions, including an integrated "to do" list manager.
It offered many different display and navigation styles, including a list view, graphical day "time blocking" view, or a week, month, or year grid.</entry>
  <entry author_id="3356178" end="53" start="32">In initial versions (Newton OS 1.x) the Newton's handwriting recognition gave extremely mixed results for users and could be fairly inaccurate.
The original handwriting recognition engine was called Calligrapher, and was licensed from a Russian company called Paragraph International.
It was actually quite sophisticated; unlike the later Palm Pilot's Graffiti — which made the user learn a new handwriting system and write each letter in an input area — Newton learned the user's natural handwriting, using a database of known words to make guesses as to what the user was writing, and could interpret writing anywhere on the screen, whether hand-printed, in cursive, or a mix of the two.

Newton could also accept free-hand "Sketches", "Shapes", and "ink text".
Text could also be entered by tapping with the stylus on a small on-screen pop-up QWERTY keyboard.
With "Shapes", Newton could recognize that the user was attempting to draw a circle, a line, a polygon, etc, and it would clean them up into "perfect" vector representations (with modifiable control points and defined vertexes) of what the user was attempting to draw.
"Shapes" and "Sketches" could be scaled or deformed once drawn.
"Ink text" captured the user's free-hand writing but allowed it to be treated somewhat like recognized text when manipulating for later editing purposes ("ink text" supported word wrap, could be formatted to be bold, italic, etc).
At any time a user could also direct the Newton to recognize selected "ink text" and turn it into recognized text (deferred recognition).
A Newton Note document (or the notes attached to each contact in Names and each calendar event) could contain any mix of interleaved text, ink text, Shapes, and Sketches.
For editing text, Newton had an intuitive system for handwritten editing, such as scratching out words to be deleted, circling text to be selected, or using written carets to mark inserts.
Although the Calligrapher was more sophisticated than Palms Graffiti system, Calligrapher was not nearly as accurate.

Later releases of the Newton operating system retained the original recognizer for compatibility, but added a hand-printed-text-only (not cursive) recognizer, code-named "Rosetta," which was developed by Apple, included in version 2.0 of the Newton operating system, and refined in Newton 2.1.
Rosetta is generally considered a significant improvement and many reviewers, testers, and users consider the Newton 2.1 handwriting recognition software better than any of the alternatives even 10 years after it was introduced.
Recognition and computation of handwritten horizontal and vertical formulas such as "1 + 2 =" was also under development but never released.

The most critical feature of the Newton handwriting recognition system is the modeless error correction.
That is, correction done in situation without using a separate window or widget, using a minimum of gestures.
If a word is recognized improperly, the user would simply double-tap the word and a list of alternatives would pop up in a menu under the stylus.
Most of the time, the correct word will be in the list.
If not, a button at the bottom of the list allows the user to edit individual characters in that word.
Error correction in many current handwriting systems provides such functionality but adds more steps to the process, greatly increasing the interruption to a user's workflow that a given correction requires.</entry>
</article>
